##sharding-jdbc分片规则配置
##数据源
#spring.shardingsphere.datasource.names=m1
#spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.m1.driver-class-name=com.cj.mysql.jdbc.Driver
#spring.shardingsphere.datasource.m1.url=jdbc:mysql://192.168.1.150:3339/test?useUnicode=true&characterEncoding=utf-8&useSSL=false
#spring.shardingsphere.datasource.m1.username=root
#spring.shardingsphere.datasource.m1.password=123456
## 指定t_order表的数据分布情况，配置数据节点 m1.t_order_1,m1.t_order_2
#spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=m1.t_order_$->{1..2}
## 指定t_order表的主键生成策略为SNOWFLAKE(雪花算法)
#spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
#spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
## 指定t_order表的分片策略，分片策略包括分片键和分片算法　　{order_id % 2 + 1}：计算出的值要么为1，要么为2，根据结果选择使用哪张表
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2 + 1}
#spring.main.allow-bean-definition-overriding=true
spring.main.allow-bean-definition-overriding=true